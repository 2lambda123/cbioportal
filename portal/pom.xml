<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>master</artifactId>
        <groupId>org.cbioportal</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>

    <artifactId>portal</artifactId>
    <name>cBioPortal</name>
    <url>https://cbioportal.org</url>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>
        <netbeans.hint.deploy.server>Tomcat</netbeans.hint.deploy.server>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.cbioportal</groupId>
            <artifactId>web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.cbioportal</groupId>
            <artifactId>persistence-mybatis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.cbioportal</groupId>
            <artifactId>security-spring</artifactId>
        </dependency>
        <dependency>
            <groupId>org.cbioportal</groupId>
            <artifactId>db-scripts</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.cbioportal</groupId>
            <artifactId>service</artifactId>
        </dependency>
        <dependency>
            <groupId>org.cbioportal</groupId>
            <artifactId>core</artifactId>
        </dependency>
        
        
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security.extensions</groupId>
            <artifactId>spring-security-saml2-core</artifactId>
        </dependency>
        <!-- jstl -->
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>
    </dependencies>

    <build>
    
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*.jks</exclude>
                    <exclude>artwork/**</exclude>
                    <exclude>content/**</exclude>
                    <exclude>tutorials/**</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.jks</include>
                    <include>**/applicationContext-security.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/webapp</directory>
                <targetPath>webapp</targetPath>
                <filtering>false</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
            <resource>
                <directory>${project.parent.basedir}/db-scripts/src/main/resources</directory>
                <targetPath>db-scripts</targetPath>
                <filtering>true</filtering>
            </resource>
        </resources>

        <filters>
            <filter>../src/main/resources/application.properties</filter>
            <!-- TODO decide to use application.properties-->
            <filter>../src/main/resources/portal.properties</filter>
            <filter>../src/main/resources/maven.properties</filter>
        </filters>
 
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>org.cbioportal.PortalApplication</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- unpack cbioportal-frontend -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${frontend.groupId}</groupId>
                                    <artifactId>cbioportal-frontend</artifactId>
                                    <version>${frontend.version}</version>
                                    <type>jar</type>
                                    <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                    <excludes>*index*</excludes>
                                    <overWrite>true</overWrite>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- copy properties files from parent into classpath -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-parent-resources</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/classes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${session.executionRootDirectory}/src/main/resources</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/maven.properties</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>${session.executionRootDirectory}/src/main/resources</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <includes>**/*.properties</includes>
                                    </includes>
                                    <excludes>
                                        <exclude>**/maven.properties</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- rename properties files (remove EXAMPLE suffixes) -->
<!--            <plugin>-->
<!--                <groupId>com.coderplus.maven.plugins</groupId>-->
<!--                <artifactId>copy-rename-maven-plugin</artifactId>-->
<!--                <version>1.0.1</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>rename-example-property-files</id>-->
<!--                        <phase>compile</phase>-->
<!--                        <goals>-->
<!--                            <goal>rename</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <fileSets>-->
<!--                                <fileSet>-->
<!--                                    <sourceFile>${project.build.directory}/classes/portal.properties.EXAMPLE</sourceFile>-->
<!--                                    <destinationFile>${project.build.directory}/classes/portal.properties</destinationFile>-->
<!--                                </fileSet>   -->
<!--                                <fileSet>-->
<!--                                    <sourceFile>${project.build.directory}/classes/log4j.properties.EXAMPLE</sourceFile>-->
<!--                                    <destinationFile>${project.build.directory}/classes/log4j.properties</destinationFile>-->
<!--                                </fileSet>   -->
<!--                            </fileSets>-->
<!--                        </configuration>-->
<!--                    </execution>    -->
<!--                </executions>-->
<!--            </plugin>-->
            <!--            &lt;!&ndash; war plugin config &ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-war-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <packagingExcludes>${exclude.redisson}</packagingExcludes>-->
<!--                    <warName>${final.war.name}</warName>-->
<!--                    <webappDirectory>${project.build.directory}/portal</webappDirectory>-->
<!--                    <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>-->
<!--                    <escapeString>\</escapeString>-->
<!--                    <webResources>-->
<!--                        <resource>-->
<!--                            <directory>-->
<!--                                ${project.parent.basedir}/persistence/persistence-connections/src/main/resources-->
<!--                            </directory>-->
<!--                            <targetPath>WEB-INF/classes</targetPath>-->
<!--                            &lt;!&ndash; do not hard-set portal.properties config at build-time &ndash;&gt;-->
<!--                            <filtering>false</filtering>-->
<!--                        </resource>-->
<!--                        <resource>-->
<!--                            <directory>${project.parent.basedir}/web/src/main/resources</directory>-->
<!--                            <targetPath>WEB-INF/classes</targetPath>-->
<!--                            <filtering>true</filtering>-->
<!--                        </resource>-->
<!--                        <resource>-->
<!--                            <directory>src/main/webapp/WEB-INF/jsp/global</directory>-->
<!--                            <include>footer.jsp</include>-->
<!--                            <targetPath>WEB-INF/jsp/global</targetPath>-->
<!--                            <filtering>true</filtering>-->
<!--                        </resource>-->
<!--                        <resource>-->
<!--                            <directory>src/main/webapp/WEB-INF</directory>-->
<!--                            <includes>-->
<!--                                <include>**/web.xml</include>-->
<!--                            </includes>-->
<!--                            <targetPath>WEB-INF</targetPath>-->
<!--                            <filtering>true</filtering>-->
<!--                        </resource>-->
<!--                        <resource>-->
<!--                            <directory>reactapp</directory>-->
<!--                            <targetPath>reactapp</targetPath>-->
<!--                        </resource>-->
<!--                        <resource>-->
<!--                            <directory>${project.parent.basedir}/db-scripts/src/main/resources</directory>-->
<!--                            <targetPath>db-scripts</targetPath>-->
<!--                            <filtering>true</filtering>-->
<!--                        </resource>-->
<!--                    </webResources>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--            &lt;!&ndash; tomcat plugin &ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>tomcat-maven-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <server>localhost</server>-->
<!--                    <url>http://localhost:8080/manager/text</url>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--            &lt;!&ndash; this plugin lets us grab shared resources from our parent &ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-resources-plugin</artifactId>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>copy-parent-resources</id>-->
<!--                        <phase>process-sources</phase>-->
<!--                        <goals>-->
<!--                            <goal>copy-resources</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <outputDirectory>${project.build.directory}/classes</outputDirectory>-->
<!--                            <resources>-->
<!--                                <resource>-->
<!--                                    <directory>${project.parent.basedir}/src/main/resources</directory>-->
<!--                                    <filtering>true</filtering>-->
<!--                                    <includes>-->
<!--                                        <include>**/*.properties</include>-->
<!--                                    </includes>-->
<!--                                    <excludes>-->
<!--                                        <exclude>**/portal.properties.*</exclude>-->
<!--                                        <exclude>**/log4j.properties.*</exclude>-->
<!--                                        <exclude>**/maven.properties.*</exclude>-->
<!--                                        <exclude>**/git.properties.*</exclude>-->
<!--                                        <exclude>**/*.EXAMPLE</exclude>-->
<!--                                    </excludes>-->
<!--                                </resource>-->
<!--                            </resources>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-invoker-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <streamLogs>true</streamLogs>-->
<!--                    <projectsDirectory>src/integration-tests</projectsDirectory>-->
<!--                    <pomIncludes>-->
<!--                        <pomInclude>*/pom.xml</pomInclude>-->
<!--                    </pomIncludes>-->
<!--                    <cloneProjectsTo>${project.build.directory}/integration-tests</cloneProjectsTo>-->
<!--                    <skipInstallation>${skipTests}</skipInstallation>-->
<!--                    <skipInvocation>${skipTests}</skipInvocation>-->
<!--                    <goals>-->
<!--                        <goal>clean</goal>-->
<!--                        <goal>verify</goal>-->
<!--                    </goals>-->
<!--                    <environmentVariables>-->
<!--                        <CBIO_WAR_LOCATION>${project.build.directory}/cbioportal.war</CBIO_WAR_LOCATION>-->
<!--                        &lt;!&ndash; We neither create nor populate the database here. Instead we rely on DB created for the integration tests in the core module. &ndash;&gt;-->
<!--                        <CBIO_TEST_DB_USR>${db.test.username}</CBIO_TEST_DB_USR>-->
<!--                        <CBIO_TEST_DB_PSW>${db.test.password}</CBIO_TEST_DB_PSW>-->
<!--                        <CBIO_TEST_DB_HOST>127.0.0.1:3306</CBIO_TEST_DB_HOST>-->
<!--                        <CBIO_TEST_DB_NAME>cgds_test</CBIO_TEST_DB_NAME>-->
<!--                        <CBIO_TEST_DB_CONNECTION_STRING>${db.test.url}</CBIO_TEST_DB_CONNECTION_STRING>-->
<!--                    </environmentVariables>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>integration-test</id>-->
<!--                        <goals>-->
<!--                            <goal>integration-test</goal>-->
<!--                            <goal>verify</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>

<!--        <filters>-->
<!--            <filter>../src/main/resources/portal.properties</filter>-->
<!--            <filter>../src/main/resources/maven.properties</filter>-->
<!--        </filters>-->

<!--        &lt;!&ndash; prevent some resources from getting into war &ndash;&gt;-->
<!--        <resources>-->
<!--            <resource>-->
<!--                <directory>src/main/resources</directory>-->
<!--                <filtering>true</filtering>-->
<!--                <excludes>-->
<!--                    <exclude>**/*.jks</exclude>-->
<!--                    <exclude>artwork/**</exclude>-->
<!--                    <exclude>content/**</exclude>-->
<!--                    <exclude>tutorials/**</exclude>-->
<!--                </excludes>-->
<!--            </resource>-->
<!--            <resource>-->
<!--                <directory>src/main/resources</directory>-->
<!--                <filtering>false</filtering>-->
<!--                <includes>-->
<!--                    <include>**/*.jks</include>-->
<!--                    <include>**/applicationContext-security.xml</include>-->
<!--                </includes>-->
<!--            </resource>-->
<!--            <resource>-->
<!--                <directory>src/main/webapp/WEB-INF</directory>-->
<!--                <filtering>true</filtering>-->
<!--                <includes>-->
<!--                    <include>**/web.xml</include>-->
<!--                </includes>-->
<!--            </resource>-->
<!--            <resource>-->
<!--                <directory>src/main/webapp/WEB-INF</directory>-->
<!--                <filtering>false</filtering>-->
<!--                <excludes>-->
<!--                    <exclude>**/web.xml</exclude>-->
<!--                </excludes>-->
<!--            </resource>-->
<!--        </resources>-->
    </build>

<!--    <properties>-->
<!--        <timestamp>${maven.build.timestamp}</timestamp>-->
<!--        <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>-->
<!--        <netbeans.hint.deploy.server>Tomcat</netbeans.hint.deploy.server>-->
<!--    </properties>-->

<!--    <profiles>-->
<!--        &lt;!&ndash; remove portal temp build files when building heroku &ndash;&gt;-->
<!--        <profile>-->
<!--            <id>heroku</id>-->
<!--            <build>-->
<!--                <plugins>-->
<!--                    <plugin>-->
<!--                        <artifactId>maven-clean-plugin</artifactId>-->
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <id>clean-jar-artifacts</id>-->
<!--                                <phase>install</phase>-->
<!--                                <goals>-->
<!--                                    <goal>clean</goal>-->
<!--                                </goals>-->
<!--                                <configuration>-->
<!--                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>-->
<!--                                    <filesets>-->
<!--                                        <fileset>-->
<!--                                            <directory>${project.parent.basedir}/portal/target</directory>-->
<!--                                            <excludes>-->
<!--                                                <exclude>*.war</exclude>-->
<!--                                                <exclude>dependency/webapp-runner.jar</exclude>-->
<!--                                            </excludes>-->
<!--                                        </fileset>-->
<!--                                    </filesets>-->
<!--                                </configuration>-->
<!--                            </execution>-->
<!--                        </executions>-->
<!--                    </plugin>-->
<!--                </plugins>-->
<!--            </build>-->
<!--        </profile>-->
<!--        <profile>-->
<!--            &lt;!&ndash; if you are not using redis add '-Dexclude-redisson'-->
<!--                 to your mvn install/package command-->
<!--                 to exclude redisson*.jar from the war-->
<!--                 because it could conflict with any redisson*.jar Tomcat has &ndash;&gt;-->
<!--            <id>exclude-redisson</id>-->
<!--            <properties>-->
<!--                <exclude.redisson>WEB-INF/lib/redisson-*.jar</exclude.redisson>-->
<!--            </properties>-->
<!--            <activation>-->
<!--                <property>-->
<!--                    <name>exclude-redisson</name>-->
<!--                </property>-->
<!--            </activation>-->
<!--        </profile>-->
<!--    </profiles>-->
</project>
