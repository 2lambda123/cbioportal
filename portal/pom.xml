<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>master</artifactId>
        <groupId>org.cbioportal</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>

    <artifactId>portal</artifactId>
    <name>cBioPortal</name>
    <url>https://cbioportal.org</url>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>

        <!-- for security integration tests -->
        <db.test.driver>com.mysql.jdbc.Driver</db.test.driver>
        <!-- For MySQL < 5.5 change 'default_storage_engine' to 'storage_engine' -->
        <db.test.url>jdbc:mysql://127.0.0.1:3306/cgds_test?sessionVariables=default_storage_engine=InnoDB</db.test.url>
        <db.test.username>cbio_user</db.test.username>
        <db.test.password>somepassword</db.test.password>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.cbioportal</groupId>
            <artifactId>web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.cbioportal</groupId>
            <artifactId>persistence-mybatis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.cbioportal</groupId>
            <artifactId>security-spring</artifactId>
        </dependency>
        <dependency>
            <groupId>org.cbioportal</groupId>
            <artifactId>db-scripts</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.cbioportal</groupId>
            <artifactId>service</artifactId>
        </dependency>

        <!-- This dependency on the classpath autoconfigures MySQL datasource based on application.propteries -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security.extensions</groupId>
            <artifactId>spring-security-saml2-core</artifactId>
        </dependency>
        <!-- jstl -->
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>bson</artifactId>
        </dependency>
    </dependencies>

    <build>

        <!-- resolve property placeholders from these files -->
        <filters>
            <filter>../src/main/resources/portal.properties</filter>
            <filter>../src/main/resources/maven.properties</filter>
        </filters>
    
        <resources>
            <!-- copy over resources directory into classpath of product -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>artwork/**</exclude>
                    <exclude>content/**</exclude>
                    <exclude>tutorials/**</exclude>
                    <exclude>webapp/**</exclude>
                    <exclude>templates/**</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>webapp/**</include>
                    <include>templates/**</include>
                </includes>
            </resource>
            <!-- copy over database schema and migration logic into classpath of product -->
            <resource>
                <directory>${project.parent.basedir}/db-scripts/src/main/resources</directory>
                <targetPath>db-scripts</targetPath>
                <filtering>false</filtering>
                <includes>
                    <include>cgds.sql</include>
                    <include>migration.sql</include>
                </includes>
            </resource>
        </resources>
 
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <skip>false</skip>
                    <mainClass>org.cbioportal.PortalApplication</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>net.ggtools.maven</groupId>-->
<!--                <artifactId>regex-copy-maven-plugin</artifactId>-->
<!--                <version>0.3.0</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>repackage</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    <sourceDirectory>${project.build.directory}</sourceDirectory>-->
<!--                    <destinationDirectory>${project.build.directory}</destinationDirectory>-->
<!--                    <source>portal(.+)\.jar</source>-->
<!--                    <destination>${final.package.name}{1}.jar</destination>-->
<!--                </configuration>-->
<!--            </plugin>-->
            <!-- unpack cbioportal-frontend -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${frontend.groupId}</groupId>
                                    <artifactId>cbioportal-frontend</artifactId>
                                    <version>${frontend.version}</version>
                                    <type>jar</type>
                                    <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                    <excludes>*index*</excludes>
                                    <overWrite>true</overWrite>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- copy properties files from parent into classpath -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-parent-resources</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/classes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${session.executionRootDirectory}/src/main/resources</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/maven.properties</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>${session.executionRootDirectory}/src/main/resources</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <includes>**/*.properties</includes>
                                    </includes>
                                    <excludes>
                                        <exclude>**/maven.properties</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-invoker-plugin</artifactId>
                <configuration>
                    <streamLogs>true</streamLogs>
                    <projectsDirectory>src/integration-tests</projectsDirectory>
                    <pomIncludes>
                        <pomInclude>*/pom.xml</pomInclude>
                    </pomIncludes>
                    <cloneProjectsTo>${project.build.directory}/integration-tests</cloneProjectsTo>
                    <skipInstallation>${skipTests}</skipInstallation>
                    <skipInvocation>${skipTests}</skipInvocation>
                    <goals>
                        <goal>clean</goal>
                        <goal>verify</goal>
                    </goals>
                    <environmentVariables>
                        <CBIO_WAR_LOCATION>${project.build.directory}/cbioportal.war</CBIO_WAR_LOCATION>
                        <!-- We neither create nor populate the database here. Instead we rely on DB created for the integration tests in the core module. -->
                        <CBIO_TEST_DB_USR>${db.test.username}</CBIO_TEST_DB_USR>
                        <CBIO_TEST_DB_PSW>${db.test.password}</CBIO_TEST_DB_PSW>
                        <CBIO_TEST_DB_HOST>127.0.0.1:3306</CBIO_TEST_DB_HOST>
                        <CBIO_TEST_DB_NAME>cgds_test</CBIO_TEST_DB_NAME>
                        <CBIO_TEST_DB_CONNECTION_STRING>${db.test.url}</CBIO_TEST_DB_CONNECTION_STRING>
                    </environmentVariables>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

<!--    <properties>-->
<!--        <timestamp>${maven.build.timestamp}</timestamp>-->
<!--        <maven.build.timestamp.format>yyyyMMdd-HHmm</maven.build.timestamp.format>-->
<!--        <netbeans.hint.deploy.server>Tomcat</netbeans.hint.deploy.server>-->
<!--    </properties>-->

<!--    <profiles>-->
<!--        &lt;!&ndash; remove portal temp build files when building heroku &ndash;&gt;-->
<!--        <profile>-->
<!--            <id>heroku</id>-->
<!--            <build>-->
<!--                <plugins>-->
<!--                    <plugin>-->
<!--                        <artifactId>maven-clean-plugin</artifactId>-->
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <id>clean-jar-artifacts</id>-->
<!--                                <phase>install</phase>-->
<!--                                <goals>-->
<!--                                    <goal>clean</goal>-->
<!--                                </goals>-->
<!--                                <configuration>-->
<!--                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>-->
<!--                                    <filesets>-->
<!--                                        <fileset>-->
<!--                                            <directory>${project.parent.basedir}/portal/target</directory>-->
<!--                                            <excludes>-->
<!--                                                <exclude>*.war</exclude>-->
<!--                                                <exclude>dependency/webapp-runner.jar</exclude>-->
<!--                                            </excludes>-->
<!--                                        </fileset>-->
<!--                                    </filesets>-->
<!--                                </configuration>-->
<!--                            </execution>-->
<!--                        </executions>-->
<!--                    </plugin>-->
<!--                </plugins>-->
<!--            </build>-->
<!--        </profile>-->
<!--        <profile>-->
<!--            &lt;!&ndash; if you are not using redis add '-Dexclude-redisson'-->
<!--                 to your mvn install/package command-->
<!--                 to exclude redisson*.jar from the war-->
<!--                 because it could conflict with any redisson*.jar Tomcat has &ndash;&gt;-->
<!--            <id>exclude-redisson</id>-->
<!--            <properties>-->
<!--                <exclude.redisson>WEB-INF/lib/redisson-*.jar</exclude.redisson>-->
<!--            </properties>-->
<!--            <activation>-->
<!--                <property>-->
<!--                    <name>exclude-redisson</name>-->
<!--                </property>-->
<!--            </activation>-->
<!--        </profile>-->
<!--    </profiles>-->
</project>
