<?xml version="1.0" encoding="UTF-8"?>

<b:beans xmlns="http://www.springframework.org/schema/security"
         xmlns:b="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:context="http://www.springframework.org/schema/context"
         xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


    <!-- this bean is shared between profiles -->
    <b:bean id="accessControl" class="org.mskcc.cbio.portal.util.internal.AccessControlImpl"/>

    <!-- beans shared across any authentication system -->
    <b:beans profile="googleplus,openid,activedirectory">

    <!-- support for general annotations within class definitions (used in AccessControl) -->
    <context:annotation-config/>

    <!-- we do post filtering within AccessControl -->
    <global-method-security pre-post-annotations="enabled">
        <expression-handler ref="expressionHandler"/>
    </global-method-security>

    <!-- custom expression handler -->
    <b:bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <b:property name="permissionEvaluator" ref="customPermissionEvaluator"/>
    </b:bean>
    <b:bean id="customPermissionEvaluator" class="org.mskcc.cbio.portal.util.CancerStudyPermissionEvaluator"/>

    <!-- beans used to access portal user db tables -->
    <b:bean id="portalUserDAO" class="org.mskcc.cbio.portal.dao.internal.PortalUserJDBCDAO">
        <b:constructor-arg ref="dataSource"/>
    </b:bean>
    <b:bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
        <b:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <b:property name="url" value="jdbc:mysql://${db.host}/${db.portal_db_name}"/>
        <b:property name="username" value="${db.user}"/>
        <b:property name="password" value="${db.password}"/>
    </b:bean>

    <b:bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <b:property name="loginFormUrl" value="/login.jsp" />
    </b:bean>

    <!-- static resources not processed by spring security filters -->
    <http pattern="/css/**" security="none"/>
    <http pattern="/images/**" security="none"/>
    <http pattern="/js/**" security="none"/>
    <http pattern="/gfx/**" security="none"/>

    <!-- end beans shared across any authentication provider -->
    </b:beans>

    <!-- googleplus beans -->
    <b:beans profile="googleplus">

    <http entry-point-ref="authenticationEntryPoint" use-expressions="true"> 
        ${url.intercepts}

        <!-- used for google+ authentication (spring social) -->
        <custom-filter ref="socialAuthenticationFilter" before="PRE_AUTH_FILTER" />

        <!--  logout actions -->      
        <logout logout-success-url="/login.jsp?logout_success=true" delete-cookies="JSESSIONID"/>
        <!-- to enable access from matlab, r, python, etc clients -->
        <session-management session-fixation-protection="none"/>
    </http>

    <!-- google+ beans -->
    <b:bean id="socialAuthenticationFilter" class="org.springframework.social.security.SocialAuthenticationFilter">
        <b:constructor-arg index="0" ref="authenticationManager" />
        <b:constructor-arg index="1" ref="userIdSource" />
        <b:constructor-arg index="2" ref="usersConnectionRepository" />
        <b:constructor-arg index="3" ref="connectionFactoryLocator" />
        <b:property name="signupUrl" value="/login.jsp" />
        <b:property name="defaultFailureUrl" value="/login.jsp?login_error=true" />
        <b:property name="postLoginUrl" value="/index.do" />
    </b:bean>

    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailsService">
        </authentication-provider>
        <authentication-provider ref="socialAuthenticationProvider"/>
    </authentication-manager>
    
    <!-- beans used to compare token returned by authentication-provider against portal user db tables -->
    <b:bean id="userDetailsService" class="org.mskcc.cbio.portal.authentication.PortalUserDetailsService">
        <b:constructor-arg ref="portalUserDAO"/>
    </b:bean>

     <!-- configure the social authentication provider which processes authentication requests -->
    <b:bean id="socialAuthenticationProvider" class="org.springframework.social.security.SocialAuthenticationProvider">
        <b:constructor-arg index="0" ref="usersConnectionRepository" />
        <b:constructor-arg index="1" ref="socialUserDetailsService" />
    </b:bean>
    
    <b:bean id="socialUserDetailsService" class="org.mskcc.cbio.portal.authentication.googleplus.GoogleplusUserDetailsService">
        <b:constructor-arg index="0" ref="userDetailsService" />
    </b:bean>

    <!-- returns the spring security account id for the user -->
    <!--Implementation of UserIdSource that returns the Spring Security Authentication's name as the user ID -->
    <b:bean id="userIdSource" class="org.springframework.social.security.AuthenticationNameUserIdSource"/>

    <b:bean id="usersConnectionRepository" 
            class="org.springframework.social.connect.mem.InMemoryUsersConnectionRepository">
        <b:constructor-arg ref="connectionFactoryLocator" />
        <b:property name="connectionSignUp" ref="connectionSignUp"/>
    </b:bean>
    <b:bean id="connectionSignUp" class="org.mskcc.cbio.portal.authentication.googleplus.GoogleplusConnectionSignUp"/>
    <b:bean id="connectionFactoryLocator" class="org.springframework.social.security.SocialAuthenticationServiceRegistry">
        <b:property name="authenticationServices">
            <b:list>
                <b:bean class="org.springframework.social.google.security.GoogleAuthenticationService">
                    <b:constructor-arg value="${googleplus.consumer.key}" />
                    <b:constructor-arg value="${googleplus.consumer.secret}" />
                    <b:property name="connectionFactory" ref="googleplusConnectionFactory" />
                    <!-- Important: The next property name changed from "scope" to "defaultScope" in 1.1.0.M4 -->
                    <b:property name="defaultScope" value="email" />
                </b:bean>
            </b:list>
        </b:property>
    </b:bean>
    <b:bean id="googleplusConnectionFactory" class="org.mskcc.cbio.portal.authentication.googleplus.GoogleplusConnectionFactory" >
        <b:constructor-arg value="${googleplus.consumer.key}" />
        <b:constructor-arg value="${googleplus.consumer.secret}" />
    </b:bean>
   
    <!-- end googleplus beans -->
    </b:beans>

    <!-- openid beans -->
    <b:beans profile="openid">

    <http use-expressions="true"> 
        ${url.intercepts}

        <openid-login login-page="/login.jsp" default-target-url="/index.do" user-service-ref="customUserService" authentication-failure-url="/login.jsp?login_error=true">
            <attribute-exchange identifier-match="https://www.google.com/.*">
                <openid-attribute name="email" type="http://axschema.org/contact/email" required="true" count="1"/>
                <openid-attribute name="firstname" type="http://axschema.org/namePerson/first" required="true"/>
                <openid-attribute name="lastname" type="http://axschema.org/namePerson/last" required="true"/>
            </attribute-exchange>
            <attribute-exchange identifier-match=".*yahoo.com.*">
                <openid-attribute name="email" type="http://axschema.org/contact/email" required="true"/>
                <openid-attribute name="fullname" type="http://axschema.org/namePerson" required="true"/>
            </attribute-exchange>
            <attribute-exchange identifier-match=".*myopenid.com.*">
                <openid-attribute name="email" type="http://schema.openid.net/contact/email" required="true"/>
                <openid-attribute name="fullname" type="http://schema.openid.net/namePerson" required="true"/>
            </attribute-exchange>
      </openid-login>

        <!--  logout actions -->      
        <logout logout-success-url="/login.jsp?logout_success=true"/>
        <!-- to enable access from matlab, r, python, etc clients -->
        <session-management session-fixation-protection="none"/>
    </http>

    <authentication-manager alias="authenticationManager"/>

    <b:bean id="customUserService" class="org.mskcc.cbio.portal.authentication.openID.OpenIDUserDetailsService">
        <b:constructor-arg ref="portalUserDAO"/>
    </b:bean>

    <!-- end openid beans -->
    </b:beans>

    <!-- openid beans -->
    <b:beans profile="activedirectory">

    <http auto-config="false" entry-point-ref="authenticationEntryPoint" use-expressions="true"> 
        ${url.intercepts}

        <!-- used for AD authentication -->
        <custom-filter ref="activeDirectoryFilter" before="FORM_LOGIN_FILTER" />

        <!--  logout actions -->      
        <logout logout-success-url="/login.jsp?logout_success=true"/>
        <!-- to enable access from matlab, r, python, etc clients -->
        <session-management session-fixation-protection="none"/>
        <!-- support cross site request forging -->
        <csrf/>
    </http>

    <b:bean id="activeDirectoryFilter" class="org.mskcc.cbio.portal.authentication.activedirectory.ADAuthFilter">
        <b:property name="authenticationManager" ref="authenticationManager" />
        <b:property name="authenticationFailureHandler" ref="failureHandler" />
        <b:property name="authenticationSuccessHandler" ref="successHandler" />
    </b:bean>

    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="ldapActiveDirectoryAuthProvider"/>
    </authentication-manager>

    <b:bean id="ldapActiveDirectoryAuthProvider" class="org.springframework.security.ldap.authentication.ad.ActiveDirectoryLdapAuthenticationProvider">
        <b:constructor-arg value="${ldap.domain}" />
        <b:constructor-arg value="${ldap.url}" />
        <b:property name="convertSubErrorCodesToExceptions" value="true"/>
    </b:bean>

    <b:bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <b:property name="defaultTargetUrl" value="/index.do"/>
        <b:property name="alwaysUseDefaultTargetUrl" value="true"/>
    </b:bean>
    <b:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <b:property name="defaultFailureUrl" value="/login.jsp?login_error=true"/>
    </b:bean>

    <!-- end active directory beans -->
    </b:beans>

    <!-- authenticate is off beans --> 
    <b:beans profile="false">
    <global-method-security pre-post-annotations="disabled"/>
    <http pattern="/**" security="none"/>
    </b:beans>

</b:beans>